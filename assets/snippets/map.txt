// map
// mapeamentos
// chave e valores
// crud

import 'dart:collection';

void main() {
  Map<int, String> map = {1: 'one', 2: 'two'};

  print(map.length); // 2

  print(map.isEmpty); // false
  print(map.isNotEmpty); // true

  print(map.keys); // (1, 2)
  print(map.values); // (one, two)

  print(map[2]); // two
  print(map[3]); // null

  map.forEach((k, v) => print('${k}: ${v}')); // percorrendo

  map.putIfAbsent(3, () => 'three'); // add

  print(map); // {1: one, 2: two, 3: three}

  Map<int, String> map2 = {1: 'one', 2: 'two'};
  map2.addAll(
      {3: 'three', 4: 'four', 5: 'five'}); // adicionado em conjunto um objeto

  print(map2); // {1: one, 2: two, 3: three, 4: four, 5: five}

  map2.update(3, (v) => 'three update');
  print(map2); // {1: one, 2: two, 3: three update, 4: four, 5: five}

  map2.update(6, (v) => 'six',
      ifAbsent: () =>
          'six added'); // tenta atualizar , caso não exista a chave adiciona
  print(map2); // {1: one, 2: two, 3: three update, 4: four, 5: five, 6: six added}

  map2.remove(6); // remove o objeto de chave 6
  print(map2); // {1: one, 2: two, 3: three update, 4: four, 5: five}
}

//Exemplo com ordenação

void main() {
  var fruit = SplayTreeMap();

  fruit[0] = 'Banana';
  fruit[5] = 'Plum';
  fruit[6] = 'Strawberry';
  fruit[2] = 'Orange';
  fruit[3] = 'Mango';
  fruit[4] = 'Blueberry';
  fruit[1] = 'Apple';

  print(fruit);

  fruit.forEach((key, val) {
    print('{ key: $key, value: $val}');
  });

  var sortedByValue = new SplayTreeMap.from(
      fruit, (key1, key2) => fruit[key1].compareTo(fruit[key2]));
  print(sortedByValue);
}

//converter map para lista

class Customer {
  final String name;
  final int age;

  Customer(this.name, this.age);

  @override
  String toString() {
    return '{ ${this.name}, ${this.age} }';
  }
}

void main() {
  Map<String, int> map = {'Jane': 21, 'Mary': 43, 'Peter': 13};
  print(map);

  List<Customer> list = [];
  map.forEach((k, v) => list.add(Customer(k, v)));
  print(list);

  // usando o interable dentro do foreach
  map.entries.forEach((e) => list.add(Customer(e.key, e.value)));
  print(list);

  // usando o metodo map como interable
  map.entries.map((e) => Customer(e.key, e.value)).toList();
  print(list);

  var fruit = SplayTreeMap();

  fruit[0] = 'Banana';
  fruit[5] = 'Plum';
  fruit[6] = 'Strawberry';
  fruit[2] = 'Orange';
  fruit[3] = 'Mango';
  fruit[4] = 'Blueberry';
  fruit[1] = 'Apple';

  // ordenar em ordem crescente pelo valor
  var sortedByValue = new SplayTreeMap.from(
      fruit, (key1, key2) => fruit[key1].compareTo(fruit[key2]));

  print(sortedByValue);
}