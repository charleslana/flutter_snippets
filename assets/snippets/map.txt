import 'dart:collection';

class Customer {
  Customer(this.name, this.age);

  final String name;
  final int age;

  @override
  String toString() {
    return '$name, $age';
  }
}

void main() {
  final Map<int, String> map = {1: 'one', 2: 'two'};

  print(map.length);
  print(map.isEmpty);
  print(map.isNotEmpty);
  print(map.keys);
  print(map.values);
  print(map[2]);
  print(map[3]);

  map
    ..forEach((key, value) => print('$key: $value'))
    ..putIfAbsent(3, () => 'three');

  print(map);

  final Map<int, String> map2 = {1: 'one', 2: 'two'}
    ..addAll({3: 'three', 4: 'four', 5: 'five'});

  print(map2);

  map2.update(3, (value) => 'three update');
  print(map2);

  map2.update(6, (v) => 'six', ifAbsent: () => 'six added');
  print(map2);

  map2.remove(6);
  print(map2);

  final fruit = SplayTreeMap<dynamic, dynamic>();

  fruit[0] = 'Fruit1';
  fruit[5] = 'Fruit2';
  fruit[6] = 'Fruit3';
  fruit[2] = 'Fruit4';
  fruit[3] = 'Fruit5';
  fruit[4] = 'Fruit6';
  fruit[1] = 'Fruit7';

  print(fruit);

  fruit.forEach((key, value) {
    print('{ key: $key, value: $value}');
  });

  final sortedByValue = SplayTreeMap<dynamic, dynamic>.from(
      fruit, (key1, key2) => fruit[key1].compareTo(fruit[key2]));

  print(sortedByValue);

  final Map<String, int> map3 = {
    'Flutter1': 21,
    'Flutter2': 43,
    'Flutter3': 13,
  };
  print(map3);

  final List<Customer> list = [];
  map3.forEach((key, value) => list.add(Customer(key, value)));
  print(list);

  map3.entries.map((element) => list.add(Customer(element.key, element.value)));
  print(list);

  map3.entries.map((element) => Customer(element.key, element.value)).toList();
  print(list);
}